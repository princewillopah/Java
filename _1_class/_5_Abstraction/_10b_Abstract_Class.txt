_10b_Abstract_Class_Shape_AbstractClass is the abstract class
Both _10b_Abstract_Class_Rectangle_SubClass class and _10b_Abstract_Class_Circle_SubClass class are subclasses that are extening the abstract class _10b_Abstract_Class_Shape_AbstractClass 

_10b_Abstract_Class_main_Class is the  Main class to demonstrate abstract classes and methods


subclass (child) - the class that inherits from another class
superclass (parent) - the class being inherited from


- there are no attributesin the abstract(parent) class. 
    - if there were attributes set to a protected access modifier, the subclasses(children) would be able to access them.
    - if there were attributes set to a private access modifier, the subclasses(children) would NOT be able to access them. since these private attributes can only accessible within the declared class
- It is useful for code reusability: reuse attributes and methods of an existing class when you create a new class.
- Abstraction and Polymorphism, use inherited methods to perform different tasks.



